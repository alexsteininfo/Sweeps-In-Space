mig <- 0.05
s_wt <- 0.1
demesize <- 4
# Compute Fisher speed of the wildtype
c_wt <- 2*sqrt(s_wt*(mig*demesize)/2)
s_vector = c(0.1,0.2,0.3,0.4,0.5,1.0,1.5,2.0)
mu_vector = c(1e-06,1e-05,1e-04,1e-03,1e-02)
# Filter data of interest
mu <- 1e-06
s_m <- 0.5
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt_data <- mean(speeds)
c_wt <- mean(speeds)
theta_2D <- (3*c_wt_data/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth=1.0) +
labs(x="population radius at the first mutant occurs, x", y="probability density, f_X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) + theme_bw(base_size=17)
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth=1.0) +
labs(x="population radius at the first mutant occurs, x", y="probability density, f_X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) + theme_bw(base_size=20)
s_m <- 0.3
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x", y="probability density, f_X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) + theme_bw(base_size=20)
# PLot data and prediction of f_Y in 2D using "first_mutant_init_time"
ggplot() + geom_histogram(aes(x=df_ff$first_mutant_init_time*c_wt_data, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth=1.0) +
labs(x="population radius at the first mutant occurs, x", y="probability density, f_X") +
xlim(0,200) + theme_bw(base_size=17)
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x", y="probability density, f_X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) + theme_bw(base_size=20)
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x", y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) + theme_bw(base_size=20)
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size=20,axis.title.x = element_markdown(),axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size=20,axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size=20, axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
librar(ggtext)
library(ggtext)
install.packages("ggtext")
library(ggtext)
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown()) +
theme_bw()
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw() +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size. 20) +
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size. 20) +
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, x",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. )) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , color=red)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , color="red"")) +
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , color="red")) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red")) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# Filter data of interest
mu <- 1e-06
s_m <- 1.0
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
s_m <- 2.0
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
s_wt <- 0.1
# Compute Fisher speed of the wildtype
c_wt <- 2*sqrt(s_wt*(mig*demesize)/2)
s_vector = c(0.1,0.2,0.3,0.4,0.5,1.0,1.5,2.0)
mu_vector = c(1e-06,1e-05,1e-04,1e-03,1e-02)
# Filter data of interest
mu <- 1e-06
s_m <- 0.3
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius at the first mutant occurs, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20, legend.position = "none") +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown())
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
# Filter data of interest
mu <- 1e-05
s_m <- 0.3
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
# Filter data of interest
mu <- 1e-05
s_m <- 0.5
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
s_m <- 0.4
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
s_m <- 0.3
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
# Filter data of interest
mu <- 1e-05
s_m <- 0.2
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
s_m <- 0.1
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
s_m <- 0.3
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
# Filter data of interest
mu <- 1e-06
s_m <- 0.3
rho <- (1-1/(1+s_m))/(1-1/(1+s_m)^demesize)
pi <- 3.1415
df_f <- df %>% filter(mu_driver_birth == mu)
df_ff <- df_f %>% filter(s_driver_birth == s_m)
# Compute analytic results
speeds <- df_ff$pop_radius_at_first_mut_init/df_ff$first_mutant_init_time
c_wt <- mean(speeds)
theta_2D <- (3*c_wt/(pi*rho*mu))^(1/3)
xaxis <- 1:250
f_X <- 3*xaxis^2*exp(-xaxis^3/theta_2D^3)/theta_2D^3
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,100) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
# PLot data and prediction of f_Y in 2D using "pop_radius_at_first_mut_init"
ggplot() + geom_histogram(aes(x=df_ff$pop_radius_at_first_mut_init, y=..density.. , fill="red", alpha=0.2)) +
geom_line(aes(x=xaxis, y=f_X),col = "red", linewidth = 1.0) +
labs(x="population radius, *x*",
y="probability density, *f*<sub>X") +
#geom_label(aes(x=c(8),y=c(0.250), label=paste("mu = ", mu, " and s = ", s_m,  sep = "") ), size=6 ) +
xlim(0,200) +
theme_bw(base_size = 20) +
theme(axis.title.x = element_markdown(), axis.title.y = element_markdown(), legend.position = "none")
gammainc(1/5, 5)
install.packages("expint")
library(expint)
gammainc(1/5, 5)
